{"ast":null,"code":"var _jsxFileName = \"/home/samy/irc/front/src/pages/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nexport default function Chat() {\n  _s();\n\n  //nom\n  const [name, setName] = useState(\"\"); //room\n\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]); //adress du server\n\n  const ENDPOINT = \"localhost:8000\";\n  useEffect(() => {\n    //on recupere \n    const {\n      name,\n      room\n    } = queryString.parse(window.location.search);\n    socket = io(ENDPOINT);\n    console.log(socket);\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n\n      return () => {\n        socket.emit(\"disconnect\");\n        socket.off();\n      };\n    });\n  }, [ENDPOINT, window.location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages(messages => [...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: message,\n      onChange: event => setMessage(event.target.value),\n      onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"DGTtK+cnWWSeRGiKbfaQ0Z+rBO8=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/samy/irc/front/src/pages/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","window","location","search","console","log","emit","error","alert","off","on","sendMessage","event","preventDefault","target","value","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAIC,MAAJ;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B;AACF,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAF6B,CAG7B;;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC,CAP6B,CAQ7B;;AACA,QAAMc,QAAQ,GAAG,gBAAjB;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZ;AACF,UAAM;AAAEK,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBN,WAAW,CAACa,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAvB;AACAd,IAAAA,MAAM,GAAGD,EAAE,CAACW,QAAD,CAAX;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACAK,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAF,IAAAA,MAAM,CAACiB,IAAP,CAAY,MAAZ,EAAoB;AAAEf,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqCc,KAAD,IAAW;AAC7C,UAAIA,KAAJ,EAAW;AACTC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;;AACD,aAAO,MAAM;AACXlB,QAAAA,MAAM,CAACiB,IAAP,CAAY,YAAZ;AACAjB,QAAAA,MAAM,CAACoB,GAAP;AACD,OAHD;AAID,KARD;AASD,GAhBQ,EAgBN,CAACV,QAAD,EAAWE,MAAM,CAACC,QAAP,CAAgBC,MAA3B,CAhBM,CAAT;AAiBAjB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACqB,EAAP,CAAU,SAAV,EAAsBf,OAAD,IAAa;AAChCG,MAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcF,OAAd,CAAf,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;;AAMA,QAAMc,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGlB,OAAH,EAAW;AACTN,MAAAA,MAAM,CAACiB,IAAP,CAAY,aAAZ,EAA2BX,OAA3B,EAAoC,MAAKC,UAAU,CAAC,EAAD,CAAnD;AACD;AACJ,GALD;;AAMAQ,EAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ,EAAoBE,QAApB;AACA,sBACE;AAAA,2BACE;AAAO,MAAA,KAAK,EAAEF,OAAd;AAAuB,MAAA,QAAQ,EAAGiB,KAAD,IAAUhB,UAAU,CAACgB,KAAK,CAACE,MAAN,CAAaC,KAAd,CAArD;AAA2E,MAAA,UAAU,EAAGH,KAAD,IAASA,KAAK,CAACI,GAAN,KAAc,OAAd,GAAwBL,WAAW,CAACC,KAAD,CAAnC,GAA6C;AAA7I;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA7CuBtB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\nlet socket;\n\nexport default function Chat() {\n    //nom\n  const [name, setName] = useState(\"\");\n  //room\n  const [room, setRoom] = useState(\"\");\n  \n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  //adress du server\n  const ENDPOINT = \"localhost:8000\";\n  useEffect(() => {\n      //on recupere \n    const { name, room } = queryString.parse(window.location.search);\n    socket = io(ENDPOINT);\n    console.log(socket);\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", { name, room }, (error) => {\n      if (error) {\n        alert(error);\n      }\n      return () => {\n        socket.emit(\"disconnect\");\n        socket.off();\n      };\n    });\n  }, [ENDPOINT, window.location.search]);\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages((messages) => [...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = (event) => {\n      event.preventDefault();\n      if(message){\n        socket.emit(\"sendMessage\", message, ()=> setMessage(''));\n      }\n  }\n  console.log(message,messages);\n  return (\n    <div>\n      <input value={message} onChange={(event)=> setMessage(event.target.value)} onKeyPress={(event)=>event.key === 'Enter' ? sendMessage(event) : null}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}