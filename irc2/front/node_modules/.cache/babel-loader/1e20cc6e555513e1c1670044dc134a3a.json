{"ast":null,"code":"var _jsxFileName = \"/home/samy/irc/front/src/pages/Messenger/Messenger.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState, useRef } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport \"./messenger.css\";\nimport Conversation from \"../../components/Conversation/Conversation\";\nimport User from \"../../components/User/User\";\nimport { io } from \"socket.io-client\";\nimport Chat from \"../../components/Chat/Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [select, setSelect] = useState(false);\n  const socket = useRef();\n  const [OnlineUsers, setOnlineUsers] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8000\");\n    console.log(socket);\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {//   setOnlineUsers(\n      //     user.followings.filter((f) => users.some((u) => u.userId === f))\n      //   );\n    });\n  }, [user]);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/conversation/\" + user._id);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/messages/\" + currentChat._id);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  const handleCreateConv = () => {\n    setSelect(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messengerPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messengerBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messengerLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"All conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(conversation),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: conversation,\n              currentUser: user\n            }, conversation._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messengerMiddle\",\n        children: /*#__PURE__*/_jsxDEV(Chat, {\n          currentChat: currentChat,\n          messages: messages,\n          scrollRef: scrollRef,\n          user: user,\n          setNewMessage: setNewMessage,\n          newMessage: newMessage,\n          handleSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messengerRigth\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(User, {\n          select: select\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), select ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateConv,\n          children: \"create a conv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelect(true),\n          children: \"select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messenger, \"bTAf3DpggwB4/XBTDmaAQ+C4KVw=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/home/samy/irc/front/src/pages/Messenger/Messenger.js"],"names":["useContext","useEffect","useState","useRef","AuthContext","axios","Conversation","User","io","Chat","Messenger","newMessage","setNewMessage","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","arrivalMessage","setArrivalMessage","select","setSelect","socket","OnlineUsers","setOnlineUsers","user","scrollRef","current","console","log","on","data","sender","senderId","text","createdAt","Date","now","members","includes","prev","emit","_id","users","getConversations","res","get","err","getMessages","handleSubmit","e","preventDefault","message","conversationId","post","receiverId","find","member","scrollIntoView","behavior","handleCreateConv","map","conversation"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,EAA0CC,MAA1C,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMqB,MAAM,GAAGpB,MAAM,EAArB;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAAW1B,UAAU,CAACI,WAAD,CAA3B;AACA,QAAMuB,SAAS,GAAGxB,MAAM,EAAxB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,MAAM,CAACK,OAAP,GAAiBpB,EAAE,CAAC,qBAAD,CAAnB;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAA,IAAAA,MAAM,CAACK,OAAP,CAAeG,EAAf,CAAkB,YAAlB,EAAiCC,IAAD,IAAU;AACxCZ,MAAAA,iBAAiB,CAAC;AAChBa,QAAAA,MAAM,EAAED,IAAI,CAACE,QADG;AAEhBC,QAAAA,IAAI,EAAEH,IAAI,CAACG,IAFK;AAGhBC,QAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAHK,OAAD,CAAjB;AAKD,KAND;AAOD,GAVQ,EAUN,EAVM,CAAT;AAYArC,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,cAAc,KACZJ,WADY,aACZA,WADY,uBACZA,WAAW,CAAEwB,OAAb,CAAqBC,QAArB,CAA8BrB,cAAc,CAACc,MAA7C,CADY,CAAd,IAEEf,WAAW,CAAEuB,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUtB,cAAV,CAAX,CAFb;AAGD,GAJQ,EAIN,CAACA,cAAD,EAAiBJ,WAAjB,CAJM,CAAT;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,MAAM,CAACK,OAAP,CAAec,IAAf,CAAoB,SAApB,EAA+BhB,IAAI,CAACiB,GAApC;AACApB,IAAAA,MAAM,CAACK,OAAP,CAAeG,EAAf,CAAkB,UAAlB,EAA+Ba,KAAD,IAAW,CACvC;AACA;AACA;AACD,KAJD;AAKD,GAPQ,EAON,CAAClB,IAAD,CAPM,CAAT;AASAzB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4C,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMzC,KAAK,CAAC0C,GAAN,CAChB,4CAA4CrB,IAAI,CAACiB,GADjC,CAAlB;AAGA7B,QAAAA,gBAAgB,CAACgC,GAAG,CAACd,IAAL,CAAhB;AACD,OALD,CAKE,OAAOgB,GAAP,EAAY;AACZnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD;AACF,KATD;;AAUAH,IAAAA,gBAAgB;AACjB,GAZQ,EAYN,CAACnB,IAAI,CAACiB,GAAN,CAZM,CAAT;AAcA1C,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgD,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMH,GAAG,GAAG,MAAMzC,KAAK,CAAC0C,GAAN,CAChB,wCAAwChC,WAAW,CAAC4B,GADpC,CAAlB;AAGAzB,QAAAA,WAAW,CAAC4B,GAAG,CAACd,IAAL,CAAX;AACD,OALD,CAKE,OAAOgB,GAAP,EAAY;AACZnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD;AACF,KATD;;AAUAC,IAAAA,WAAW;AACZ,GAZQ,EAYN,CAAClC,WAAD,CAZM,CAAT;;AAcA,QAAMmC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,OAAO,GAAG;AACdpB,MAAAA,MAAM,EAAEP,IAAI,CAACiB,GADC;AAEdR,MAAAA,IAAI,EAAExB,UAFQ;AAGd2C,MAAAA,cAAc,EAAEvC,WAAW,CAAC4B;AAHd,KAAhB;;AAMA,QAAI;AACF,YAAMG,GAAG,GAAG,MAAMzC,KAAK,CAACkD,IAAN,CAChB,oCADgB,EAEhBF,OAFgB,CAAlB;AAIAnC,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc6B,GAAG,CAACd,IAAlB,CAAD,CAAX;AACApB,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAPD,CAOE,OAAOoC,GAAP,EAAY;AACZnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD;;AAED,UAAMQ,UAAU,GAAGzC,WAAW,CAACwB,OAAZ,CAAoBkB,IAApB,CAChBC,MAAD,IAAYA,MAAM,KAAKhC,IAAI,CAACiB,GADX,CAAnB;AAIApB,IAAAA,MAAM,CAACK,OAAP,CAAec,IAAf,CAAoB,aAApB,EAAmC;AACjCR,MAAAA,QAAQ,EAAER,IAAI,CAACiB,GADkB;AAEjCa,MAAAA,UAFiC;AAGjCrB,MAAAA,IAAI,EAAExB;AAH2B,KAAnC;AAKD,GA7BD;;AA+BAV,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,0BAAA0B,SAAS,CAACC,OAAV,0EAAmB+B,cAAnB,CAAkC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAlC;AACD,GAFQ,EAEN,CAAC3C,QAAD,CAFM,CAAT;;AAGA,QAAM4C,gBAAgB,GAAG,MAAM;AAC7BvC,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBACGT,aAAa,CAACiD,GAAd,CAAmBC,YAAD,iBACjB;AAAK,YAAA,OAAO,EAAE,MAAM/C,cAAc,CAAC+C,YAAD,CAAlC;AAAA,mCACE,QAAC,YAAD;AAEE,cAAA,YAAY,EAAEA,YAFhB;AAGE,cAAA,WAAW,EAAErC;AAHf,eACOqC,YAAY,CAACpB,GADpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,WAAW,EAAE5B,WADf;AAEE,UAAA,QAAQ,EAAEE,QAFZ;AAGE,UAAA,SAAS,EAAEU,SAHb;AAIE,UAAA,IAAI,EAAED,IAJR;AAKE,UAAA,aAAa,EAAEd,aALjB;AAME,UAAA,UAAU,EAAED,UANd;AAOE,UAAA,YAAY,EAAEuC;AAPhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF,eA2BE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,MAAM,EAAE7B;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGA,MAAM,gBACL;AAAQ,UAAA,OAAO,EAAEwC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADK,gBAGL;AAAQ,UAAA,OAAO,EAAE,MAAMvC,SAAS,CAAC,IAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GAhJuBZ,S;;KAAAA,S","sourcesContent":["import { useContext, useEffect, useState, useRef } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport \"./messenger.css\";\nimport Conversation from \"../../components/Conversation/Conversation\";\n\nimport User from \"../../components/User/User\";\nimport { io } from \"socket.io-client\";\nimport Chat from \"../../components/Chat/Chat\";\n\nexport default function Messenger() {\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [select, setSelect] = useState(false);\n  const socket = useRef();\n  const [OnlineUsers, setOnlineUsers] = useState([]);\n  const { user } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8000\");\n    console.log(socket);\n    socket.current.on(\"getMessage\", (data) => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now(),\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    arrivalMessage &&\n      currentChat?.members.includes(arrivalMessage.sender) &&\n      setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", (users) => {\n      //   setOnlineUsers(\n      //     user.followings.filter((f) => users.some((u) => u.userId === f))\n      //   );\n    });\n  }, [user]);\n\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\n          \"http://localhost:8000/api/conversation/\" + user._id\n        );\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getConversations();\n  }, [user._id]);\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\n          \"http://localhost:8000/api/messages/\" + currentChat._id\n        );\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id,\n    };\n\n    try {\n      const res = await axios.post(\n        \"http://localhost:8000/api/messages\",\n        message\n      );\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n\n    const receiverId = currentChat.members.find(\n      (member) => member !== user._id\n    );\n\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage,\n    });\n  };\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n  const handleCreateConv = () => {\n    setSelect(false);\n  };\n  return (\n    <div className=\"messengerPage\">\n      <div className=\"messengerBox\">\n        <div className=\"messengerLeft\">\n          <h1>All conversations</h1>\n          <div>\n            {conversations.map((conversation) => (\n              <div onClick={() => setCurrentChat(conversation)}>\n                <Conversation\n                  key={conversation._id}\n                  conversation={conversation}\n                  currentUser={user}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"messengerMiddle\">\n          <Chat\n            currentChat={currentChat}\n            messages={messages}\n            scrollRef={scrollRef}\n            user={user}\n            setNewMessage={setNewMessage}\n            newMessage={newMessage}\n            handleSubmit={handleSubmit}\n          />\n        </div>\n\n        <div className=\"messengerRigth\">\n          <h1>User Online</h1>\n          <User select={select} />\n          {select ? (\n            <button onClick={handleCreateConv}>create a conv</button>\n          ) : (\n            <button onClick={() => setSelect(true)}>select</button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}