{"ast":null,"code":"var _jsxFileName = \"/home/samy/irc/front/src/pages/Messenger/Messenger.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport \"./messenger.css\";\nimport Conversation from \"../../components/Conversation/Conversation\";\nimport Messagei from \"../../components/Messagei/Messagei\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    setSocket(io(\"ws://localhost:8000\"));\n  }, []);\n  useEffect(() => {\n    socket.on;\n  }, []);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/conversation/\" + user._id);\n        setConversations(res.data);\n        console.log(\"conversations\", res);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/messages/\" + currentChat._id);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"messenger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setCurrentChat(conversation),\n        children: /*#__PURE__*/_jsxDEV(Conversation, {\n          conversation: conversation,\n          currentUser: user\n        }, conversation._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBoxWrapper\",\n        children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxTop\",\n            children: messages.map(m => /*#__PURE__*/_jsxDEV(Messagei, {\n              message: m,\n              own: m.sender === user._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxBottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"chatMessageInput\",\n              placeholder: \"write something...\",\n              onChange: e => setNewMessage(e.target.value),\n              value: newMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"noConversationText\",\n          children: \"Open a conversation to start a chat.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messenger, \"ZTpqA/94oLQqnukHL9rFsJR7TPI=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/home/samy/irc/front/src/pages/Messenger/Messenger.js"],"names":["useContext","useEffect","useState","AuthContext","axios","Conversation","Messagei","io","Messenger","newMessage","setNewMessage","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","socket","setSocket","user","on","getConversations","res","get","_id","data","console","log","err","getMessages","handleSubmit","e","preventDefault","message","sender","text","conversationId","post","map","conversation","m","target","value"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport \"./messenger.css\";\nimport Conversation from \"../../components/Conversation/Conversation\";\nimport Messagei from\"../../components/Messagei/Messagei\";\nimport {io} from \"socket.io-client\";\nexport default function Messenger() {\n    const [newMessage, setNewMessage] = useState(\"\");\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const { user } = useContext(AuthContext);\n\n  useEffect(() => {\n      setSocket(io(\"ws://localhost:8000\"));\n  },[])\n  \n  useEffect(() => {\n    socket.on\n},[])\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\n          \"http://localhost:8000/api/conversation/\" + user._id\n        );\n        setConversations(res.data);\n        console.log(\"conversations\", res);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getConversations();\n  }, [user._id]);\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/messages/\" + currentChat._id);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id,\n    };\n\n    try {\n        const res = await axios.post(\"http://localhost:8000/api/messages\", message);\n        setMessages([...messages, res.data]);\n        setNewMessage(\"\");\n      } catch (err) {\n        console.log(err);\n      }\n}\n\n  return (\n    <div>\n      <h1>messenger</h1>\n      <div>\n        {conversations.map((conversation) => (\n          <div onClick={()=> setCurrentChat(conversation)}>\n            <Conversation\n              key={conversation._id}\n              conversation={conversation}\n              currentUser={user}\n            />\n          </div>\n        ))}\n      </div>\n\n      <div>\n        <div className=\"chatBoxWrapper\">\n          {currentChat ? (\n            <>\n              <div className=\"chatBoxTop\">\n              {messages.map((m) => (\n                      <Messagei message={m} own={m.sender === user._id} />\n                  ))}\n              </div>\n              <div className=\"chatBoxBottom\">\n                <textarea\n                  className=\"chatMessageInput\"\n                  placeholder=\"write something...\"\n                  onChange={(e) => setNewMessage(e.target.value)}\n                  value={newMessage}\n                ></textarea>\n                <button onClick={handleSubmit}>\n                  Send\n                </button>\n              </div>\n            </>\n          ) : (\n            <span className=\"noConversationText\">\n              Open a conversation to start a chat.\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}