{"ast":null,"code":"var _jsxFileName = \"/home/samy/irc/front/src/pages/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nexport default function Chat() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"localhost:8000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(window.location.search);\n    socket = io(ENDPOINT);\n    console.log(socket);\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n\n      return () => {\n        socket.emit(\"disconnect\");\n        socket.off();\n      };\n    });\n  }, [ENDPOINT, window.location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages(messages => [...messages, message]);\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: message,\n      onchange: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"jLAG9pkRujYw4dRyFbFTmLVKcb8=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/samy/irc/front/src/pages/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","window","location","search","console","log","emit","error","alert","off","on"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAIC,MAAJ;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMgB,QAAQ,GAAG,gBAAjB;AACAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEK,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBN,WAAW,CAACe,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAvB;AACAhB,IAAAA,MAAM,GAAGD,EAAE,CAACa,QAAD,CAAX;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACAK,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAF,IAAAA,MAAM,CAACmB,IAAP,CAAY,MAAZ,EAAoB;AAAEjB,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqCgB,KAAD,IAAW;AAC7C,UAAIA,KAAJ,EAAW;AACTC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;;AACD,aAAO,MAAM;AACXpB,QAAAA,MAAM,CAACmB,IAAP,CAAY,YAAZ;AACAnB,QAAAA,MAAM,CAACsB,GAAP;AACD,OAHD;AAID,KARD;AASD,GAfQ,EAeN,CAACV,QAAD,EAAWE,MAAM,CAACC,QAAP,CAAgBC,MAA3B,CAfM,CAAT;AAgBAnB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACuB,EAAP,CAAU,SAAV,EAAsBf,OAAD,IAAa;AAChCG,MAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcF,OAAd,CAAf,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAO,MAAA,KAAK,EAAEF,OAAd;AAAuB,MAAA,QAAQ;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAjCuBP,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\nlet socket;\n\nexport default function Chat() {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"localhost:8000\";\n  useEffect(() => {\n    const { name, room } = queryString.parse(window.location.search);\n    socket = io(ENDPOINT);\n    console.log(socket);\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", { name, room }, (error) => {\n      if (error) {\n        alert(error);\n      }\n      return () => {\n        socket.emit(\"disconnect\");\n        socket.off();\n      };\n    });\n  }, [ENDPOINT, window.location.search]);\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages((messages) => [...messages, message]);\n    });\n  }, [messages]);\n  return (\n    <div>\n      <input value={message} onchange/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}