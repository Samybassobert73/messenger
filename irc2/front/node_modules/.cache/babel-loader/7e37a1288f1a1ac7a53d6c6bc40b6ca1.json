{"ast":null,"code":"var _jsxFileName = \"/home/samy/Bureau/irc2/front/src/components/Infobar/Infobar.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./infobar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Infobar(_ref) {\n  _s();\n\n  let {\n    currentChat\n  } = _ref;\n  const [isEditing, setIsEditing] = useState(false);\n  const [name, setName] = useState(currentChat.name);\n  const [editedName, setEditedName] = useState(\"\");\n  useEffect(() => {\n    console.log(editedName);\n    console.log(\"name\", name);\n  }, [editedName, name]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3000/api/user/me\", {\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    }).then(res => setstate(res.data));\n  }, []);\n\n  const handleModification = async e => {\n    e.preventDefault();\n    const message = {\n      name: editedName\n    };\n    console.log(message);\n\n    try {\n      const res = await axios.put(`http://localhost:8080/api/conversation/name/${currentChat._id}`, message);\n      setName(res.data);\n      setEditedName(\"\");\n      setIsEditing(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"infobar\",\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: isEditing ? editedName : name,\n      onChange: e => setEditedName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"putButton\",\n      onClick: handleModification,\n      children: \"valid\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"putButton\",\n      onClick: () => {\n        setIsEditing(true);\n      },\n      children: \"modifier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Infobar, \"4U0FxOKjC7nFLFv3gjWq+HvlTpE=\");\n\n_c = Infobar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Infobar\");","map":{"version":3,"sources":["/home/samy/Bureau/irc2/front/src/components/Infobar/Infobar.js"],"names":["axios","React","useState","useEffect","Infobar","currentChat","isEditing","setIsEditing","name","setName","editedName","setEditedName","console","log","get","headers","token","then","res","setstate","data","handleModification","e","preventDefault","message","put","_id","err","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;;AACA,eAAe,SAASC,OAAT,OAAkC;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC/C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACG,WAAW,CAACG,IAAb,CAAhC;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,IAApB;AACD,GAHQ,EAGN,CAACE,UAAD,EAAaF,IAAb,CAHM,CAAT;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,KAAK,CAACc,GAAN,CACI,mCADJ,EAEM;AACEC,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAYC;AADtB;AADX,KAFN,EAOCC,IAPD,CAOOC,GAAD,IAASC,QAAQ,CAACD,GAAG,CAACE,IAAL,CAPvB;AAQH,GATU,EAST,EATS,CAAT;;AAWA,QAAMC,kBAAkB,GAAG,MAAOC,CAAP,IAAa;AACtCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,OAAO,GAAG;AACdhB,MAAAA,IAAI,EAAEE;AADQ,KAAhB;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYW,OAAZ;;AAEA,QAAI;AACF,YAAMN,GAAG,GAAG,MAAMlB,KAAK,CAACyB,GAAN,CACf,+CAA8CpB,WAAW,CAACqB,GAAI,EAD/C,EAEhBF,OAFgB,CAAlB;AAIAf,MAAAA,OAAO,CAACS,GAAG,CAACE,IAAL,CAAP;AACAT,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARD,CAQE,OAAOoB,GAAP,EAAY;AACZf,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACD;AACF,GAnBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eACGrB,SAAS,gBACR;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEA,SAAS,GAAGI,UAAH,GAAgBF,IAFlC;AAGE,MAAA,QAAQ,EAAGc,CAAD,IAAOX,aAAa,CAACW,CAAC,CAACM,MAAF,CAASC,KAAV;AAHhC;AAAA;AAAA;AAAA;AAAA,YADQ,gBAOR;AAAA,gBAAKrB;AAAL;AAAA;AAAA;AAAA;AAAA,YARJ,EAWGF,SAAS,gBACR;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEe,kBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAKR;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbd,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAtEuBH,O;;KAAAA,O","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./infobar.css\";\nexport default function Infobar({ currentChat }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [name, setName] = useState(currentChat.name);\n  const [editedName, setEditedName] = useState(\"\");\n\n  useEffect(() => {\n    console.log(editedName);\n    console.log(\"name\", name);\n  }, [editedName, name]);\n\n  useEffect(() => {\n    axios.get(\n        \"http://localhost:3000/api/user/me\"\n        , {\n            headers: {\n              'Authorization': \"Bearer \" + token\n            }\n          })\n    .then((res) => setstate(res.data));\n},[]);\n\n  const handleModification = async (e) => {\n    e.preventDefault();\n\n    const message = {\n      name: editedName,\n    };\n    console.log(message);\n\n    try {\n      const res = await axios.put(\n        `http://localhost:8080/api/conversation/name/${currentChat._id}`,\n        message\n      );\n      setName(res.data);\n      setEditedName(\"\");\n      setIsEditing(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"infobar\">\n      {isEditing ? (\n        <input\n          type=\"text\"\n          value={isEditing ? editedName : name}\n          onChange={(e) => setEditedName(e.target.value)}\n        />\n      ) : (\n        <h1>{name}</h1>\n      )}\n\n      {isEditing ? (\n        <button className=\"putButton\" onClick={handleModification}>\n          valid√©\n        </button>\n      ) : (\n        <button\n          className=\"putButton\"\n          onClick={() => {\n            setIsEditing(true);\n          }}\n        >\n          modifier\n        </button>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}