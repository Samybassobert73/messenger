{"ast":null,"code":"var _jsxFileName = \"/home/samy/Bureau/irc2/front/src/components/Infobar/Infobar.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./infobar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Infobar(_ref) {\n  _s();\n\n  let {\n    currentChat\n  } = _ref;\n  const [isEditing, setisEditing] = useState(false);\n  const [name, setName] = useState(currentChat.name);\n  const [newName, setNewName] = useState(\"\");\n  useEffect(() => {}, [name]); //fonction qui envoie un message\n\n  const handleModification = async e => {\n    e.preventDefault(); //BDD on ajoute le nouveau message en bdd et dans le tableau de messages\n\n    const message = {\n      \"name\": newName\n    };\n\n    try {\n      const res = await axios.put(`http://localhost:8080/api/conversation/name/${currentChat._id}`, message);\n      setName(res.data);\n      setNewName(\"\");\n      setisEditing(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"infobar\",\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: modification ? name : newName,\n      onChange: e => setNewName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name ? name : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"putButton\",\n      onClick: handleModification,\n      children: \"valid\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"putButton\",\n      onClick: () => {\n        isEditing(true);\n      },\n      children: \"modifier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Infobar, \"lZ8a/UmpfkkAzR5Fk8j79YF8VuM=\");\n\n_c = Infobar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Infobar\");","map":{"version":3,"sources":["/home/samy/Bureau/irc2/front/src/components/Infobar/Infobar.js"],"names":["axios","React","useState","useEffect","Infobar","currentChat","isEditing","setisEditing","name","setName","newName","setNewName","handleModification","e","preventDefault","message","res","put","_id","data","err","console","log","modification","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,eAAP;;AACA,eAAe,SAASC,OAAT,OAAgC;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACJ,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACG,WAAW,CAACG,IAAb,CAAhC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEP,CAACK,IAAD,CAFO,CAAT,CAL+C,CAS9C;;AACA,QAAMI,kBAAkB,GAAG,MAAOC,CAAP,IAAa;AACvCA,IAAAA,CAAC,CAACC,cAAF,GADuC,CAEvC;;AAEA,UAAMC,OAAO,GAAG;AACf,cAAOL;AADQ,KAAhB;;AAIA,QAAI;AACF,YAAMM,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CACf,+CAA8CZ,WAAW,CAACa,GAAI,EAD/C,EAEhBH,OAFgB,CAAlB;AAIAN,MAAAA,OAAO,CAACO,GAAG,CAACG,IAAL,CAAP;AACAR,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARD,CAQE,OAAOa,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AAEF,GApBA;;AAuBC,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eAKKd,SAAS,gBAEV;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEiB,YAAY,GAACf,IAAD,GAAME,OAA5C;AAAqD,MAAA,QAAQ,EAAGG,CAAD,IAAOF,UAAU,CAACE,CAAC,CAACW,MAAF,CAASC,KAAV;AAAhF;AAAA;AAAA;AAAA;AAAA,YAFU,gBAIV;AAAA,gBAAKjB,IAAI,GAACA,IAAD,GAAM;AAAf;AAAA;AAAA;AAAA;AAAA,YATJ,EAeKF,SAAS,gBAEV;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEM,kBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFU,gBAIV;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAE,MAAI;AAACN,QAAAA,SAAS,CAAC,IAAD,CAAT;AAAgB,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA5DuBF,O;;KAAAA,O","sourcesContent":["import axios from \"axios\";\nimport React ,{useState, useEffect} from \"react\";\nimport \"./infobar.css\"\nexport default function Infobar({currentChat}) {\n    const [isEditing, setisEditing] = useState(false);\nconst [name, setName] = useState(currentChat.name)\nconst [newName, setNewName] = useState(\"\")\n\nuseEffect(() => {\n  \n},[name])\n\n //fonction qui envoie un message\n const handleModification = async (e) => {\n  e.preventDefault();\n  //BDD on ajoute le nouveau message en bdd et dans le tableau de messages\n \n  const message = {\n   \"name\":newName\n  };\n\n  try {\n    const res = await axios.put(\n      `http://localhost:8080/api/conversation/name/${currentChat._id}`,\n      message\n    );\n    setName(res.data);\n    setNewName(\"\");\n    setisEditing(false);  \n  } catch (err) {\n    console.log(err);\n  }\n\n};\n\n\n  return (\n    <div className=\"infobar\">\n\n\n\n\n        {isEditing?\n        \n        <input type=\"text\" value={modification?name:newName} onChange={(e) => setNewName(e.target.value)} />\n        :\n        <h1>{name?name:null}</h1>\n        \n        }\n\n\n        \n        {isEditing?\n        \n        <button className=\"putButton\" onClick={handleModification}>valid√©</button>\n        :\n        <button className=\"putButton\" onClick={()=>{isEditing(true)}}>modifier</button>\n        }\n       \n      \n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}