{"ast":null,"code":"var _jsxFileName = \"/home/samy/Bureau/irc2/front/src/components/Createconv/CreateConv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./createconv.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateConv(_ref) {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    console.log(\"users\", users);\n    console.log(\"currentUser\", currentUser);\n  }, [users]);\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8080/api/users/all\");\n        setUsers(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getUsers();\n  }, []);\n\n  const handleChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n\n    if (name === \"allSelect\") {\n      let tempUser = users.map(user => {\n        return { ...user,\n          isChecked: checked\n        };\n      });\n      setUsers(tempUser);\n    } else {\n      let tempUser = users.map(user => user.username === name ? { ...user,\n        isChecked: checked\n      } : user);\n      setUsers(tempUser);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createConvx\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createConvBoxx\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            name: \"allSelect\",\n            checked: !users.some(user => (user === null || user === void 0 ? void 0 : user.isChecked) !== true),\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label ms-2\",\n            children: \"All Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            name: user.username,\n            checked: (user === null || user === void 0 ? void 0 : user.isChecked) || false,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label ms-2\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateConv, \"oJvdWG5J7JsBkcxYfblIYRqUfbU=\");\n\n_c = CreateConv;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateConv\");","map":{"version":3,"sources":["/home/samy/Bureau/irc2/front/src/components/Createconv/CreateConv.js"],"names":["React","useState","useEffect","axios","CreateConv","currentUser","users","setUsers","console","log","getUsers","res","get","data","err","handleChange","e","name","checked","target","tempUser","map","user","isChecked","username","some","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./createconv.css\";\nimport axios from \"axios\";\nexport default function CreateConv( {currentUser}) {\n  const [users, setUsers] = useState([]);\n \n  useEffect(() => {\n    console.log(\"users\", users)\n    console.log(\"currentUser\",currentUser);\n  }, [users]);\n\n\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8080/api/users/all\");\n\n        setUsers(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getUsers();\n  }, []);\n\n\n\n  const handleChange = (e) => {\n    const { name, checked } = e.target;     \n \n    if (name === \"allSelect\") {\n      let tempUser = users.map((user) => {\n        return { ...user, isChecked: checked };\n      });\n      setUsers(tempUser);\n      \n    } else {\n      let tempUser = users.map((user) =>\n        user.username === name ? { ...user, isChecked: checked } : user\n      );\n      setUsers(tempUser);\n     \n    }\n  };\n\n\n\n\n\n  return (\n    <div className=\"createConvx\">\n      <div className=\"createConvBoxx\">\n\n        <form className=\"form w-100\">\n          <h3>Select Users</h3>\n          <div className=\"form-check\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              name=\"allSelect\"\n              checked={!users.some((user) => user?.isChecked !== true)}\n              onChange={handleChange}\n            />\n            <label className=\"form-check-label ms-2\">All Select</label>\n          </div>\n          {users.map((user, index) => (\n            <div className=\"form-check\" key={index}>\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                name={user.username}\n                checked={user?.isChecked || false}\n                onChange={handleChange}\n              />\n              <label className=\"form-check-label ms-2\">{user.username}</label>\n            </div>\n          ))}\n        </form>\n\n        {/* <ul>\n                    {users.map(user => (<div>\n                        <li>{user.username}</li>\n                        <input type=\"checkbox\" name=\"username\" value={user._id} onChange={(e)=>{setUsersChecked(e.value)}}/>\n                        </div>))}\n                </ul> */}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}