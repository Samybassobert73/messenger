{"ast":null,"code":"var _jsxFileName = \"/home/samy/Bureau/irc2/front/src/components/Infobar/Infobar.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./infobar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Infobar(_ref) {\n  _s();\n\n  let {\n    currentChat\n  } = _ref;\n  const [modification, setModification] = useState(false);\n  const [name, setName] = useState(currentChat.name);\n  const [newName, setNewName] = useState(null); //fonction qui envoie un message\n\n  const handleModification = async e => {\n    e.preventDefault(); //BDD on ajoute le nouveau message en bdd et dans le tableau de messages\n\n    const message = {\n      name: newName\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:8080/api/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"infobar\",\n    children: modification ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"putButton\",\n        onClick: () => {\n          setModification(false);\n        },\n        children: \"valid\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: name ? name : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"putButton\",\n        onClick: () => {\n          setModification(true);\n        },\n        children: \"modifier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Infobar, \"2ZvsHK5LNkbupISzmOBlV1Q57Wo=\");\n\n_c = Infobar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Infobar\");","map":{"version":3,"sources":["/home/samy/Bureau/irc2/front/src/components/Infobar/Infobar.js"],"names":["axios","React","useState","useEffect","Infobar","currentChat","modification","setModification","name","setName","newName","setNewName","handleModification","e","preventDefault","message","res","post","setMessages","messages","data","setNewMessage","err","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,eAAP;;;AACA,eAAe,SAASC,OAAT,OAAgC;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC3C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;AACJ,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACG,WAAW,CAACG,IAAb,CAAhC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC,CAH+C,CAM9C;;AACA,QAAMU,kBAAkB,GAAG,MAAOC,CAAP,IAAa;AACvCA,IAAAA,CAAC,CAACC,cAAF,GADuC,CAEvC;;AACA,UAAMC,OAAO,GAAG;AACfP,MAAAA,IAAI,EAAEE;AADS,KAAhB;;AAIA,QAAI;AACF,YAAMM,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAChB,oCADgB,EAEhBF,OAFgB,CAAlB;AAIAG,MAAAA,WAAW,CAAC,CAAC,GAAGC,QAAJ,EAAcH,GAAG,CAACI,IAAlB,CAAD,CAAX;AACAC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AAEF,GAlBA;;AAqBC,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,cACKhB,YAAY,gBACb;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEI,OAA1B;AAAmC,QAAA,QAAQ,EAAGG,CAAD,IAAOF,UAAU,CAACE,CAAC,CAACY,MAAF,CAASC,KAAV;AAA9D;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,MAAI;AAACnB,UAAAA,eAAe,CAAC,KAAD,CAAf;AAAuB,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADa,gBAMd;AAAA,8BACA;AAAA,kBAAKC,IAAI,GAACA,IAAD,GAAM;AAAf;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,MAAI;AAACD,UAAAA,eAAe,CAAC,IAAD,CAAf;AAAsB,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA7CuBH,O;;KAAAA,O","sourcesContent":["import axios from \"axios\";\nimport React ,{useState, useEffect} from \"react\";\nimport \"./infobar.css\"\nexport default function Infobar({currentChat}) {\n    const [modification, setModification] = useState(false);\nconst [name, setName] = useState(currentChat.name)\nconst [newName, setNewName] = useState(null)\n\n  \n //fonction qui envoie un message\n const handleModification = async (e) => {\n  e.preventDefault();\n  //BDD on ajoute le nouveau message en bdd et dans le tableau de messages\n  const message = {\n   name: newName\n  };\n\n  try {\n    const res = await axios.post(\n      \"http://localhost:8080/api/messages\",\n      message\n    );\n    setMessages([...messages, res.data]);\n    setNewMessage(\"\");\n  } catch (err) {\n    console.log(err);\n  }\n\n};\n\n\n  return (\n    <div className=\"infobar\">\n        {modification?\n        <>\n        <input type=\"text\" value={newName} onChange={(e) => setNewName(e.target.value)} />\n        <button className=\"putButton\" onClick={()=>{setModification(false)}}>valid√©</button>\n        </>\n       :\n       <>\n       <h1>{name?name:null}</h1>\n       <button className=\"putButton\" onClick={()=>{setModification(true)}}>modifier</button>\n       </>\n        }\n      \n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}