{"ast":null,"code":"var _jsxFileName = \"/home/samy/irc/front/src/pages/Messenger/Messenger.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState, useRef } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport \"./messenger.css\";\nimport Conversation from \"../../components/Conversation/Conversation\";\nimport Messagei from \"../../components/Messagei/Messagei\";\nimport { io } from \"socket.io-client\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const socket = useRef();\n  const [OnlineUsers, setOnlineUsers] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8000\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {\n      setOnlineUsers(user.followings.filter(f => users.some(u => u.userId === f)));\n    }); // socket.current.on(\"welcome\", (message) => {\n    //     console.log(\"message\",message);\n    //    });\n  }, [user]);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/conversation/\" + user._id);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/messages/\" + currentChat._id);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messengerPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messengerBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messengerLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"All conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatWrapper\",\n          children: conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(conversation),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: conversation,\n              currentUser: user\n            }, conversation._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messengerMiddle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"top\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxMiddle\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(Messagei, {\n                message: m,\n                own: m.sender === user._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"noConversationText\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Open a conversation to start a chat.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messenger, \"7JYCfhmMykBeyV6L77vWceGW4uE=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/home/samy/irc/front/src/pages/Messenger/Messenger.js"],"names":["useContext","useEffect","useState","useRef","AuthContext","axios","Conversation","Messagei","io","useNavigate","Messenger","newMessage","setNewMessage","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","arrivalMessage","setArrivalMessage","socket","OnlineUsers","setOnlineUsers","user","current","on","data","sender","senderId","text","createdAt","Date","now","members","includes","prev","emit","_id","users","followings","filter","f","some","u","userId","getConversations","res","get","err","console","log","getMessages","handleSubmit","e","preventDefault","message","conversationId","post","receiverId","find","member","map","conversation","m","target","value"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState, useRef } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport \"./messenger.css\";\nimport Conversation from \"../../components/Conversation/Conversation\";\nimport Messagei from \"../../components/Messagei/Messagei\";\nimport { io } from \"socket.io-client\";\nimport {useNavigate} from \"react-router-dom\"\nexport default function Messenger() {\n    \n  const [newMessage, setNewMessage] = useState(\"\");\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const socket = useRef();\n  const [OnlineUsers, setOnlineUsers] = useState([]);\n  const { user } = useContext(AuthContext);\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8000\");\n    socket.current.on(\"getMessage\", (data) => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now(),\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    arrivalMessage &&\n      currentChat?.members.includes(arrivalMessage.sender) &&\n      setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", (users) => {\n      setOnlineUsers(\n        user.followings.filter((f) => users.some((u) => u.userId === f))\n      );\n    });\n\n    // socket.current.on(\"welcome\", (message) => {\n    //     console.log(\"message\",message);\n    //    });\n  }, [user]);\n\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\n          \"http://localhost:8000/api/conversation/\" + user._id\n        );\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getConversations();\n  }, [user._id]);\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\n          \"http://localhost:8000/api/messages/\" + currentChat._id\n        );\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id,\n    };\n\n    try {\n      const res = await axios.post(\n        \"http://localhost:8000/api/messages\",\n        message\n      );\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n\n    const receiverId = currentChat.members.find(\n      (member) => member !== user._id\n    );\n\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage,\n    });\n  };\n\n  return (\n    <div className=\"messengerPage\">\n      <div className=\"messengerBox\">\n        <div className=\"messengerLeft\">\n          <h1>All conversations</h1>\n          <div className=\"chatWrapper\">\n            {conversations.map((conversation) => (\n              <div onClick={() => setCurrentChat(conversation)}>\n                <Conversation\n                  key={conversation._id}\n                  conversation={conversation}\n                  currentUser={user}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"messengerMiddle\">\n          <div className=\"chatBoxWrapper\">\n            {currentChat ? (\n              <div className=\"chatWrapper\">\n                <div className=\"top\">\n                  <h1>name</h1>\n                </div>\n                <div className=\"chatBoxMiddle\">\n                  {messages.map((m) => (\n                    <Messagei message={m} own={m.sender === user._id} />\n                  ))}\n                </div>\n                <div className=\"chatBoxBottom\">\n                  <textarea\n                    className=\"chatMessageInput\"\n                    placeholder=\"write something...\"\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    value={newMessage}\n                  ></textarea>\n                  <button onClick={handleSubmit}>Send</button>\n                </div>\n              </div>\n            ) : (\n              <div  className=\"noConversationText\">\n                <span>\n                  Open a conversation to start a chat.\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}