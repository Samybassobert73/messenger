{"ast":null,"code":"var _jsxFileName = \"/home/samy/Bureau/irc2/front/src/components/Createconv/CreateConv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./createconv.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateConv(_ref) {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [users, setUsers] = useState([]); //create une conversation\n\n  const [select, setSelect] = useState(false);\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8080/api/users/all\");\n        var data = res.data;\n        let adduser = data.filter(user => user._id !== currentUser._id);\n        setUsers(adduser);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getUsers();\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const checkedUser = users.filter(user => user.isChecked === true);\n    let receivers = checkedUser.map(user => user._id);\n    const convuser = {\n      sender: currentUser._id,\n      receivers\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:8080/api/conversation/\", convuser);\n      console.log(res);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n\n    if (name === \"allSelect\") {\n      let tempUser = users.map(user => {\n        return { ...user,\n          isChecked: checked\n        };\n      });\n      setUsers(tempUser);\n    } else {\n      let tempUser = users.map(user => user.username === name ? { ...user,\n        isChecked: checked\n      } : user);\n      setUsers(tempUser);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createConvx\",\n    children: select ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createConvBoxx\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            name: \"allSelect\",\n            checked: !users.some(user => (user === null || user === void 0 ? void 0 : user.isChecked) !== true),\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label ms-2\",\n            children: \"All Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            name: user.username,\n            checked: (user === null || user === void 0 ? void 0 : user.isChecked) || false,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label ms-2\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: handleSubmit,\n          value: \"envoyaxx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"createButton\",\n      onClick: () => setSelect(true),\n      children: \"select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateConv, \"1qow5n2O82suyTaW0csNSlRnnTQ=\");\n\n_c = CreateConv;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateConv\");","map":{"version":3,"sources":["/home/samy/Bureau/irc2/front/src/components/Createconv/CreateConv.js"],"names":["React","useState","useEffect","axios","CreateConv","currentUser","users","setUsers","select","setSelect","getUsers","res","get","data","adduser","filter","user","_id","err","console","log","handleSubmit","e","preventDefault","checkedUser","isChecked","receivers","map","convuser","sender","post","handleChange","name","checked","target","tempUser","username","some","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./createconv.css\";\nimport axios from \"axios\";\nexport default function CreateConv( {currentUser}) {\n  const [users, setUsers] = useState([]);\n  //create une conversation\n  const [select, setSelect] = useState(false);\n\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8080/api/users/all\");\n        var data = res.data;\n        let adduser = data.filter((user) => user._id !== currentUser._id);\n        setUsers(adduser);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getUsers();\n  }, []);\n\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const checkedUser = users.filter((user) => user.isChecked === true);\n    let receivers = checkedUser.map(user => user._id)\n    const convuser = {\n        sender:currentUser._id,\n        receivers\n    }\n      try {\n        const res = await axios.post(\"http://localhost:8080/api/conversation/\", convuser);\n        console.log(res);\n      } catch (err) {\n        console.log(err);\n      }\n  \n    \n  };\n\n\n  const handleChange = (e) => {\n    const { name, checked } = e.target;     \n \n    if (name === \"allSelect\") {\n      let tempUser = users.map((user) => {\n        return { ...user, isChecked: checked };\n      });\n      setUsers(tempUser);\n      \n    } else {\n      let tempUser = users.map((user) =>\n        user.username === name ? { ...user, isChecked: checked } : user\n      );\n      setUsers(tempUser);\n     \n    }\n  };\n\n\n\n\n\n  return (\n    <div className=\"createConvx\">\n\n\n            {select ? (\n             \n<div className=\"createConvBoxx\">\n        <form className=\"form w-100\">\n          <h3>Select Users</h3>\n          <div className=\"form-check\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              name=\"allSelect\"\n              checked={!users.some((user) => user?.isChecked !== true)}\n              onChange={handleChange}\n            />\n            <label className=\"form-check-label ms-2\">All Select</label>\n          </div>\n          {users.map((user, index) => (\n            <div className=\"form-check\" key={index}>\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                name={user.username}\n                checked={user?.isChecked || false}\n                onChange={handleChange}\n              />\n              <label className=\"form-check-label ms-2\">{user.username}</label>\n            </div>\n          ))}\n          <input type=\"submit\" onClick={handleSubmit} value=\"envoyaxx\"/>\n        </form>\n\n      </div>\n\n\n            ) : (\n              <button className=\"createButton\" onClick={() => setSelect(true)}>\n                select\n              </button>\n            )}\n\n\n\n\n\n\n\n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}