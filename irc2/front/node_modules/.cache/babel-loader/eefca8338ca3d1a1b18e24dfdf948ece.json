{"ast":null,"code":"var _jsxFileName = \"/home/samy/Bureau/irc2/front/src/components/Createconv/CreateConv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./createconv.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateConv() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [usersChecked, setUsersChecked] = useState([]);\n  useEffect(() => {\n    console.log(\"userschecked\", usersChecked);\n  }, [usersChecked]);\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8080/api/users/all\");\n        setUsers(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createConvx\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createConvBoxx\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"create conv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            name: \"allSelect\" // checked={\n            //   users.filter((user) => user?.isChecked !== true).length < 1\n            // }\n            ,\n            checked: !users.some(user => (user === null || user === void 0 ? void 0 : user.isChecked) !== true),\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label ms-2\",\n            children: \"All Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            name: user.name,\n            checked: (user === null || user === void 0 ? void 0 : user.isChecked) || false,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label ms-2\",\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateConv, \"Tj0XgsWS7kV6m0qKjrsdcPEZvEM=\");\n\n_c = CreateConv;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateConv\");","map":{"version":3,"sources":["/home/samy/Bureau/irc2/front/src/components/Createconv/CreateConv.js"],"names":["React","useState","useEffect","axios","CreateConv","users","setUsers","usersChecked","setUsersChecked","console","log","getUsers","res","get","data","err","some","user","isChecked","handleChange","map","index","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,YAA5B;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,QAAQ,GAAG,YAAY;AAC3B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,qCAAV,CAAlB;AAEAP,QAAAA,QAAQ,CAACM,GAAG,CAACE,IAAL,CAAR;AACD,OAJD,CAIE,OAAOC,GAAP,EAAY;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD;AACF,KARD;;AASAJ,IAAAA,QAAQ;AACT,GAXQ,EAWN,EAXM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,SAAS,EAAC,kBAFZ;AAGE,YAAA,IAAI,EAAC,WAHP,CAIE;AACA;AACA;AANF;AAOE,YAAA,OAAO,EAAE,CAACN,KAAK,CAACW,IAAN,CAAYC,IAAD,IAAU,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,SAAN,MAAoB,IAAzC,CAPZ;AAQE,YAAA,QAAQ,EAAEC;AARZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAO,YAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAeGd,KAAK,CAACe,GAAN,CAAU,CAACH,IAAD,EAAOI,KAAP,kBACT;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,SAAS,EAAC,kBAFZ;AAGE,YAAA,IAAI,EAAEJ,IAAI,CAACK,IAHb;AAIE,YAAA,OAAO,EAAE,CAAAL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,SAAN,KAAmB,KAJ9B;AAKE,YAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAO,YAAA,SAAS,EAAC,uBAAjB;AAAA,sBAA0CF,IAAI,CAACK;AAA/C;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA,WAAiCD,KAAjC;AAAA;AAAA;AAAA;AAAA,gBADD,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GAnEuBjB,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./createconv.css\";\nimport axios from \"axios\";\nexport default function CreateConv() {\n  const [users, setUsers] = useState([]);\n  const [usersChecked, setUsersChecked] = useState([]);\n  useEffect(() => {\n    console.log(\"userschecked\", usersChecked);\n  }, [usersChecked]);\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8080/api/users/all\");\n\n        setUsers(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getUsers();\n  }, []);\n\n\n\n\n  \n\n  return (\n    <div className=\"createConvx\">\n      <div className=\"createConvBoxx\">\n        <h1>create conv</h1>\n\n        <form className=\"form w-100\">\n          <h3>Select Users</h3>\n          <div className=\"form-check\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              name=\"allSelect\"\n              // checked={\n              //   users.filter((user) => user?.isChecked !== true).length < 1\n              // }\n              checked={!users.some((user) => user?.isChecked !== true)}\n              onChange={handleChange}\n            />\n            <label className=\"form-check-label ms-2\">All Select</label>\n          </div>\n          {users.map((user, index) => (\n            <div className=\"form-check\" key={index}>\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                name={user.name}\n                checked={user?.isChecked || false}\n                onChange={handleChange}\n              />\n              <label className=\"form-check-label ms-2\">{user.name}</label>\n            </div>\n          ))}\n        </form>\n\n        {/* <ul>\n                    {users.map(user => (<div>\n                        <li>{user.username}</li>\n                        <input type=\"checkbox\" name=\"username\" value={user._id} onChange={(e)=>{setUsersChecked(e.value)}}/>\n                        </div>))}\n                </ul> */}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}