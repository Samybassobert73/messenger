{"ast":null,"code":"var _jsxFileName = \"/home/samy/irc/front/src/pages/Messenger/Messenger.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState, useRef } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport \"./messenger.css\";\nimport Conversation from \"../../components/Conversation/Conversation\";\nimport Messagei from \"../../components/Messagei/Messagei\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const socket = useRef();\n  const [OnlineUsers, setOnlineUsers] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8000\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", users => {\n      console.log(\"users\", users);\n    }); // socket.current.on(\"welcome\", (message) => {\n    //     console.log(\"message\",message);\n    //    });\n  }, [user]);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/conversation/\" + user._id);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/messages/\" + currentChat._id);\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messengerPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"messenger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setCurrentChat(conversation),\n          children: /*#__PURE__*/_jsxDEV(Conversation, {\n            conversation: conversation,\n            currentUser: user\n          }, conversation._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBoxWrapper\",\n        children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxTop\",\n            children: messages.map(m => /*#__PURE__*/_jsxDEV(Messagei, {\n              message: m,\n              own: m.sender === user._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBoxBottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"chatMessageInput\",\n              placeholder: \"write something...\",\n              onChange: e => setNewMessage(e.target.value),\n              value: newMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"noConversationText\",\n          children: \"Open a conversation to start a chat.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messenger, \"7JYCfhmMykBeyV6L77vWceGW4uE=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/home/samy/irc/front/src/pages/Messenger/Messenger.js"],"names":["useContext","useEffect","useState","useRef","AuthContext","axios","Conversation","Messagei","io","Messenger","newMessage","setNewMessage","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","arrivalMessage","setArrivalMessage","socket","OnlineUsers","setOnlineUsers","user","current","on","data","sender","senderId","text","createdAt","Date","now","members","includes","prev","emit","_id","users","console","log","getConversations","res","get","err","getMessages","handleSubmit","e","preventDefault","message","conversationId","post","receiverId","find","member","map","conversation","m","target","value"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState, useRef } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport \"./messenger.css\";\nimport Conversation from \"../../components/Conversation/Conversation\";\nimport Messagei from \"../../components/Messagei/Messagei\";\nimport { io } from \"socket.io-client\";\nexport default function Messenger() {\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const socket = useRef();\n  const [OnlineUsers, setOnlineUsers] = useState([]);\n  const { user } = useContext(AuthContext);\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8000\");\n    socket.current.on(\"getMessage\", (data) => {\n        setArrivalMessage({\n          sender: data.senderId,\n          text: data.text,\n          createdAt: Date.now(),\n        });\n      });\n  }, []);\n\n  useEffect(() => {\n    arrivalMessage &&\n      currentChat?.members.includes(arrivalMessage.sender) &&\n      setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n    socket.current.on(\"getUsers\", (users) => {\n      console.log(\"users\", users);\n    });\n\n    // socket.current.on(\"welcome\", (message) => {\n    //     console.log(\"message\",message);\n    //    });\n  }, [user]);\n\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\n          \"http://localhost:8000/api/conversation/\" + user._id\n        );\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getConversations();\n  }, [user._id]);\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\n          \"http://localhost:8000/api/messages/\" + currentChat._id\n        );\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n\n\n\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id,\n    };\n\n    try {\n      const res = await axios.post(\n        \"http://localhost:8000/api/messages\",\n        message\n      );\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n\n    const receiverId = currentChat.members.find(\n        (member) => member !== user._id\n      );\n\n    socket.current.emit(\"sendMessage\", {\n        senderId: user._id,\n        receiverId,\n        text: newMessage,\n      });\n\n\n  };\n\n  return (\n    <div className=\"messengerPage\">\n        <header><h1>messenger</h1></header>\n\n        \n      <div className=\"Left\">\n      <div>\n        {conversations.map((conversation) => (\n          <div onClick={() => setCurrentChat(conversation)}>\n            <Conversation\n              key={conversation._id}\n              conversation={conversation}\n              currentUser={user}\n            />\n          </div>\n        ))}\n      </div>\n      </div>\n\n     \n\n      <div className=\"middle\">\n        <div className=\"chatBoxWrapper\">\n          {currentChat ? (\n            <>\n              <div className=\"chatBoxTop\">\n                {messages.map((m) => (\n                  <Messagei message={m} own={m.sender === user._id} />\n                ))}\n              </div>\n              <div className=\"chatBoxBottom\">\n                <textarea\n                  className=\"chatMessageInput\"\n                  placeholder=\"write something...\"\n                  onChange={(e) => setNewMessage(e.target.value)}\n                  value={newMessage}\n                ></textarea>\n                <button onClick={handleSubmit}>Send</button>\n              </div>\n            </>\n          ) : (\n            <span className=\"noConversationText\">\n              Open a conversation to start a chat.\n            </span>\n          )}\n        </div>\n      </div>\n\n\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}